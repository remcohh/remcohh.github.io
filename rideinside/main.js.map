{"version":3,"sources":["./src/app/store/actions/student-audits.actions.ts","./src/app/store/actions/global.actions.ts","./src/app/interfaces/api-status.ts","./src/app/store/actions/student-audit-documents.actions.ts","./src/app/store/state/menu.state.ts","./src/environments/environment.ts","./src/app/store/state/participant.state.ts","./src/app/store/state/normalizers/message.normalizer.ts","./src/app/services/platform.service.ts","./src/app/models/student-audit.ts","./src/app/store/state/help.state.ts","./src/app/store/state/status-texts.state.ts","./src/app/store/actions/student-admissions.actions.ts","./src/app/services/link.service.ts","./src/app/store/actions/data-upload.actions.ts","./src/app/guards/can-activate-protected-route.guard.ts","./src/app/store/state/normalizers/student-audit.normalizer.ts","./src/app/app.component.ts","./src/app/store/state/normalizers/content.normalizer.ts","./src/app/store/state/student-audit-documents.state.ts","./src/app/store/state/message.state.ts","./src/app/app.component.html","./src/app/store/state/normalizers/student-admission.normalizer.ts","./src/app/store/state/data-upload.state.ts","./src/app/app.module.ts","./src/app/store/state/content.state.ts","./src/app/store/actions/participant.actions.ts","./src/app/store/actions/content.actions.ts","./src/app/store/actions/message.actions.ts","./src/app/store/state/index.ts","./src/app/guards/can-activate-public-route.guard.ts","./src/app/store/actions/status-texts.actions.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/services/storage.service.ts","./src/app/store/state/student-audits.state.ts","./src/app/store/state/student-admissions.state.ts","./src/app/app-routing.module.ts","./src/app/interfaces/message.ts","./src/app/app.component.scss","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/enums/language.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { TaskEnrichmentData } from 'src/app/models/audit-enrichment';\nimport { AuditGroupRaw } from 'src/app/models/student-audit';\nexport class GetStudentAudits {\n  static readonly type = '[Student Audit Groups component] GetStudentAudits';\n  constructor() {}\n}\n\nexport class SetSelectedStudentAuditId {\n  static readonly type = '[Student Audits state] SetSelectedStudentAudit';\n  constructor(public id: string) {}\n}\n\nexport class SetShowAuditContent {\n  static readonly type = '[Student Audits state] SetShowAuditContent';\n  constructor(public show: boolean) {}\n}\n\nexport class SwitchAuditView {\n  static readonly type = '[Content state] SwitchAuditView';\n  constructor(public taskEnrichments: TaskEnrichmentData[]) {}\n}\n\nexport class HandleAuditsResponse {\n  static readonly type = '[Student Audits State] HandleAuditsResponse';\n  constructor(public data: AuditGroupRaw[], public id?: string) {}\n}\n","export class ClearAllStates {\n  static readonly type = '[Logout Button] clearAllStates';\n  constructor() {}\n}\n","export interface ApiStatus {\n  isFetching: boolean;\n  isInitialised: boolean;\n  hasApiError: boolean;\n  hasConnectionError: boolean;\n}\n\nexport const updateApiStatus = (prop: Partial<ApiStatus> = {}): ApiStatus => ({\n  isFetching: prop.isFetching || false,\n  isInitialised: prop.isInitialised || false,\n  hasApiError: prop.hasApiError || false,\n  hasConnectionError: prop.hasConnectionError || false,\n});\n","import { StudentAuditDocumentRaw } from \"src/app/models/student-audit\";\r\n\r\nexport class GetStudentAuditDocuments {\r\n    static readonly type = '[Student Audit Document state] GetStudentAuditDocuments';\r\n    constructor() {}\r\n}\r\nexport class HandleAuditsResponse {\r\n    static readonly type = '[Student Audit Document state] HandleAuditsResponse';\r\n    constructor(public data: StudentAuditDocumentRaw[]) {}\r\n}\r\n\r\nexport class SetSelectedStudentAuditId {\r\n  static readonly type = '[Student Audit Document state] SetSelectedStudentAudit';\r\n  constructor(public id: string) {}\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Action, NgxsOnInit, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ApiStatus, updateApiStatus } from 'src/app/interfaces/api-status';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CombinedStateModel } from '.';\r\nimport { ClearAllStates } from '../actions/global.actions';\r\nimport {\r\n  GetMenuEnrichment,\r\n  HandleMenuEnrichmentResponse,\r\n  SwitchMenu,\r\n} from '../actions/content.actions';\r\nimport {\r\n  normalizeMenuContent,\r\n} from './normalizers/content.normalizer';\r\nimport { MenuEnrichment, MenuEnrichmentData } from 'src/app/models/audit-enrichment';\r\nimport { MenuObject } from 'src/app/interfaces/content';\r\n\r\nexport interface MenuStateModel extends ApiStatus {\r\n    nl: MenuEnrichmentData[] | null;\r\n    en: MenuEnrichmentData[] | null;\r\n    selectedMenu: MenuObject[];\r\n}\r\n\r\nexport const defaultState: MenuStateModel = {\r\n  nl: null,\r\n  en: null,\r\n  hasApiError: false,\r\n  hasConnectionError: false,\r\n  isFetching: false,\r\n  isInitialised: false,\r\n  selectedMenu: null\r\n};\r\n\r\n@State<MenuStateModel>({\r\n  name: 'menu',\r\n  defaults: { ...defaultState },\r\n})\r\n@Injectable()\r\nexport class MenuState {\r\n  private headers: HttpHeaders = new HttpHeaders({\r\n    apiKey: environment.apiKey,\r\n  });\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private store: Store\r\n  ) {}\r\n\r\n  @Selector()\r\n  static selectedMenu({\r\n    selectedMenu,\r\n  }: MenuStateModel): MenuObject[] {\r\n    return selectedMenu;\r\n  }\r\n\r\n  @Action(SwitchMenu)\r\n  async switchMenu(ctx: StateContext<MenuStateModel>) {\r\n    const { participant } = this.store.snapshot() as CombinedStateModel;\r\n    const { languageCode } = participant;\r\n    const translations = ctx.getState()[languageCode]?.map(normalizeMenuContent);\r\n    if (!translations) {\r\n      return ctx.dispatch(new GetMenuEnrichment());\r\n    }\r\n    ctx.patchState({\r\n      selectedMenu: translations,\r\n    });\r\n  }\r\n\r\n  @Action(GetMenuEnrichment)\r\n  async GetMenuEnrichment(\r\n    ctx: StateContext<MenuStateModel>\r\n  ): Promise<void> {\r\n    const { participant } = this.store.snapshot() as CombinedStateModel;\r\n    const { languageCode } = participant;\r\n    ctx.patchState({ ...updateApiStatus({ isFetching: true }) });\r\n    this.http.get<MenuEnrichment>(this.constructUrl(languageCode),{headers:this.headers}).subscribe({\r\n      next: (data) => ctx.dispatch(new HandleMenuEnrichmentResponse(data)),\r\n      error: (e) => console.warn(e),\r\n    });\r\n  }\r\n\r\n  @Action(HandleMenuEnrichmentResponse)\r\n  handleMenuEnrichmentResponse(\r\n    ctx: StateContext<MenuStateModel>,\r\n    { enrichment }: HandleMenuEnrichmentResponse\r\n  ) {\r\n    const { participant } = this.store.snapshot() as CombinedStateModel;\r\n    const { languageCode } = participant;\r\n    ctx.setState((oldState) => ({\r\n      ...oldState,\r\n      ...updateApiStatus({ isInitialised: true }),\r\n      [languageCode]: enrichment.data\r\n    }));\r\n    ctx.dispatch(new SwitchMenu());\r\n  }\r\n\r\n  // @Action(ClearAllStates)\r\n  // async clearState(ctx: StateContext<MenuStateModel>) {\r\n  //   ctx.setState({ ...defaultState });\r\n  // }\r\n    \r\n  private constructUrl(languageCode: string): string {\r\n    return `${environment.endpoints.root}${environment.endpoints.menu}?lang=${languageCode}`;\r\n  }\r\n\r\n  // ngxsOnInit(ctx: StateContext<MenuStateModel>){\r\n  //   ctx.dispatch(new SwitchMenu());\r\n  // }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  authServer: {\n    login:\n      'https://simplesso-test.maastrichtuniversity.nl/IdentityProviderSelection',\n    token:\n      'https://simplesso-test.maastrichtuniversity.nl/api/Identity',\n\n  },\n  apiKey: '7cd39531-52ee-40ec-a055-8ecf987cb810',\n  clientId: 'mu-test',\n  callbackUrl: {\n    web: 'http://localhost:8100/auth',\n    app: 'nl.mu.aj://auth',\n  },\n  messaging: {\n    appId: '678b391a-bb39-4284-99c3-84f886a57023',\n  },\n  endpoints: {\n    root: 'https://intg-dev.maastrichtuniversity.nl/AJ_BFF/v10/',\n    student: 'api/Student',\n    admissions: 'Admission',\n    audits: `Admission`,\n    auditDocuments: 'Documents',\n    auditDocumentsUpload: 'Documents/Upload',\n    enrichment: 'AuditEnrichment',\n    statusTexts: 'api/AuditStatusText',\n    help: 'api/drupalenrichment/GetHelpEnrichment',\n    menu: 'api/drupalenrichment/GetMenuBarEnrichment',\n    message: 'MessageBox',\n    messageStatus: 'Status',\n    chat_en: 'https://www.maastrichtuniversity.nl/chat.html',\n    chat_nl: 'https://www.maastrichtuniversity.nl/chat-nl.html'\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { LanguageCode } from 'src/app/enums/language';\nimport { StorageService } from '../../services/storage.service';\nimport { ClearAllStates } from '../actions/global.actions';\nimport { environment } from 'src/environments/environment';\nimport {\n  InitialiseParticipantData,\n  SetLanguageCode,\n  SetParticipantData,\n} from '../actions/participant.actions';\nimport { SwitchHelp, SwitchMenu } from '../actions/content.actions';\nimport { SwitchStatusTexts } from '../actions/status-texts.actions';\n\nexport interface ParticipantStateModel {\n  participantId: string;\n  sssoId: string;\n  languageCode: LanguageCode;\n  chatUrl?: string;\n}\n\nconst defaultState: ParticipantStateModel = {\n  participantId: '',\n  sssoId: '',\n  languageCode: LanguageCode.EN,\n  chatUrl: environment.endpoints['chat_'+LanguageCode.EN]\n};\n\n@State<ParticipantStateModel>({\n  name: 'participant',\n  defaults: { ...defaultState },\n})\n@Injectable()\nexport class ParticipantState {\n  constructor(\n    private storageService: StorageService,\n    private store: Store,\n    private translate: TranslateService\n  ) {}\n\n  @Selector()\n  static participantId({ participantId }: ParticipantStateModel): string {\n    return participantId;\n  }\n\n  @Selector()\n  static chatUrl({ chatUrl }: ParticipantStateModel): string {\n    return chatUrl;\n  }\n\n  @Selector()\n  static languageCode({ languageCode }: ParticipantStateModel): LanguageCode {\n    return languageCode;\n  }\n\n  @Action(InitialiseParticipantData)\n  async initialiseParticipantData() {\n    const storageData = await this.storageService.getStorageData();\n    this.store.dispatch(new SetParticipantData(storageData));\n  }\n\n  @Action(SetParticipantData)\n  setParticipantData(\n    ctx: StateContext<ParticipantStateModel>,\n    { participantData }: SetParticipantData\n  ): void {\n    this.storageService.setStorageData({ ...participantData });\n    console.log('ParticipantData languageCode',participantData.languageCode);\n    ctx.setState(\n      (oldState): ParticipantStateModel => ({ ...oldState, ...participantData })\n    );\n  }\n\n  @Action(SetLanguageCode)\n  setLanguage(\n    ctx: StateContext<ParticipantStateModel>,\n    { languageCode }: SetLanguageCode\n  ): void {\n    this.translate.use(languageCode);\n    const chatUrl: string = environment.endpoints['chat_'+languageCode];\n    ctx.setState(\n      (oldState): ParticipantStateModel => ({\n        ...oldState,\n        languageCode,\n        chatUrl\n      })\n    );\n    this.storageService.setLanguageCode(languageCode);\n    \n    this.store.dispatch(new SwitchHelp());\n    this.store.dispatch(new SwitchMenu());\n    this.store.dispatch(new SwitchStatusTexts());\n  }\n\n  @Action(ClearAllStates)\n  clearState(ctx: StateContext<ParticipantStateModel>) {\n    ctx.setState({ ...defaultState });\n  }\n}\n","import { Message, MessageRaw, MessageStatus } from \"src/app/interfaces/message\";\n\nexport const normalizeMessageContent = (raw: Partial<MessageRaw>): Message => {\n  return {\n    id: raw.MessageId,\n    subject: raw.Subject,\n    content: raw.Body,\n    status: raw.Status,\n    read: getReadMessageStatus(raw.Status),\n    node_id: raw.NodeId,\n    admission_id: raw.AdmissionGuid,\n    send_dt: raw.DateTimeCreated,\n    academicPeriod: raw.AcademicPeriod,\n    studyYear: raw.StudyYear\n  };\n};\n\nexport const getReadMessageStatus = (messageStatus: MessageStatus | string): boolean => {\n  return (messageStatus === MessageStatus.READ_NORMAL_PRIO || messageStatus === MessageStatus.READ_HIGH_PRIO);\n}\n\nexport const setReadMessageStatus = (messageStatus: MessageStatus | string): MessageStatus => {\n  return ((messageStatus === MessageStatus.READ_HIGH_PRIO || messageStatus === MessageStatus.UNREAD_HIGH_PRIO)?MessageStatus.READ_HIGH_PRIO:MessageStatus.READ_NORMAL_PRIO);\n}","import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlatformService {\n  public resizeSubject: Subject<void> = this.platform.resize;\n  constructor(private platform: Platform) {}\n\n  isPhone(){\n    return this.platform.is('mobile') || this.platform.is('phablet');\n  }\n\n  isWeb() {\n    return !this.isPhone();\n  }\n\n  isIos(){\n    return this.platform.is('ios');\n  }\n}\n","export enum StatusText {\n  COMPLETED = 'Completed',\n  NOT_COMPLETED = 'Not Completed',\n  IN_PROCESS = 'In Process',\n  WAIT_FOR_UM = 'Wait for UM',\n  WAIT_FOR_STUDENT = 'Wait for Student',\n}\n\nexport enum NodeType {\n  OVERIG = 'O', // for the top node\n  EISEN_PAKKET = 'P', // level 2 nodeType\n  BEOORDELINGS_EIS = 'B', // irrelevant for FE\n  SUB_EIS = 'S', // nodeType that needs to be rendered when under any P\n  AANMELD_EIS = 'A', // irrelevant for FE\n}\n\nexport enum NodeActor {\n  AUTOMATIC = 'A',\n  EMPLOYEE = 'E',\n  STUDENT = 'S', // node that needs to be rendered (student action)\n}\n\n// when will I need this?\nexport enum NodeTaskCategory {\n  STUDIELINK = 'SLI',\n  ADMISSION = 'ADM',\n  ENROLLEMENT = 'ENR',\n}\n\nexport enum NodeTaskType {\n  ACCEPT_PLACEMENT = 'A', // confirmation component\n  INTERVIEW = 'I', // either datepicker component or external link\n  PAYMENT = 'P', // tuition payment\n  TEST = 'T', // qualtrics? => external link\n  UPLOAD_FILE = 'U', // file input component\n  WEB_LINK = 'W', // external ink\n}\n\nexport type StudentAuditRaw = {\n  NodeInvisible4St: boolean; // ??\n  NodeUrgentAction: boolean; // ??\n  StatusText: StatusText;\n  Reqresult: string;\n  ID: string;\n  ParentID: string;\n  NodeType: NodeType;\n  NodeActor: NodeActor;\n  NodeText: string; // description of node => in case of student actor, task description to be used in FE\n  NodeFeedback: string | null; // Feedback text\n  NodeDeadline: string | null; // deadline of task, if applicable\n  NodeTaskType: NodeTaskType | null;\n  NodeWaitStep: boolean; // is grey when waiting for another task?\n  NodeDocType: string | null; // unique number of document that is uploaded => but why is it called type of it is an ID?\n  NodeDocTypeTxt: string | null; // description of the uploaded document\n  NodeDocFileExt: string | null; // Allowed file extensions for the upload\n  NodeUrl: string | null; // url of external link for the task\n  Requirement: string; //technical key of nodeType 'Requirement' => irrelevent\n  Subrequirement: string; //technical key of nodeType 'Sub Requirement' => irrelevant\n  Text: string; // text of (sub)requirement => irrelevant\n  Weighting: string | null; // irrelevant\n  NodeTaskCateg: NodeTaskCategory; // when will I use this?\n  nodeType: NodeType;\n  nodeActor: NodeActor;\n};\n\nexport type StudentAudit = {\n  statusText: StatusText;\n  isCompleted?: boolean;\n  id: string;\n  nodeText: string; // description of node => in case of student actor, task description to be used in FE\n  nodeDeadline: string | null; // deadline of task, if applicable\n  nodeTaskType: NodeTaskType | null;\n  nodeWaitStep: boolean; // is grey when waiting for another task?\n  nodeDocType: string | null; // unique number of document that is uploaded => but why is it called type of it is an ID?\n  nodeDocTypeTxt: string | null; // description of the uploaded document\n  nodeDocFileExt: string | null; // Allowed file extensions for the upload\n  nodeTaskCategory?: string; // Task Category  \n  nodeFeedback: string | null; // Feedback provided by UM\n  nodeUrl: string | null; // url of external link for the task\n};\n\nexport type StudentAuditDocumentRaw = {\n  NodeID: string;\n  NodeDocType: string;\n  NodeDocTypeText: string;\n  DocumentID: string;\n  FileName: string;\n  FileNameOriginal?: string;\n  UploadTime: string;\n  UploadBy: string;\n  Authenticated?: string;\n  AuthenticatedBy: string;\n  AuthenticatedDate: string;\n  AuthenticationID: string;\n  Locked: boolean;\n  Irrelevant: boolean;\n  StudyID: string;\n  StudyYear: string;\n  AcademicPeriod: string;\n  FileSize: string;\n  Remarks?: string;\n};\n\nexport type StudentAuditDocument = {\n  id: string;\n  nodeId: string;\n  name: string;\n  originalName?: string;\n  uploadTime: string;\n  uploadBy: string;\n  authenticated?: string;\n  authenticatedDate?: string;\n  locked: boolean;\n};\n\nexport type AuditGroupRaw = {\n  Categ: string;\n  CategoryText: string;\n  StudentAudits: StudentAuditRaw[];\n};\n\nexport type AuditGroup = {\n  categ: string;\n  studentAudits: StudentAudit[];\n  isExpanded?: boolean;\n};\n\nexport type SelectedStudentAudit = {\n  categoryText: string;\n  id: string;\n};\n\nexport const EmptyAudit: StudentAuditRaw = {\n  ID: \"XXXX\",\n  NodeInvisible4St: false,\n  NodeUrgentAction: false,\n  StatusText: StatusText.WAIT_FOR_UM,\n  Reqresult: '',\n  ParentID: '',\n  NodeType: NodeType.EISEN_PAKKET,\n  NodeActor: NodeActor.AUTOMATIC,\n  NodeText: '',\n  NodeFeedback: null,\n  NodeDeadline: null,\n  NodeTaskType: null,\n  NodeWaitStep: false,\n  NodeDocType: null,\n  NodeDocTypeTxt: null,\n  NodeDocFileExt: null,\n  NodeUrl: null,\n  Requirement: '',\n  Subrequirement: '',\n  Text: '',\n  Weighting: null,\n  NodeTaskCateg: NodeTaskCategory.ADMISSION,\n  nodeType: NodeType.EISEN_PAKKET,\n  nodeActor: NodeActor.AUTOMATIC,\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Action, NgxsOnInit, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ApiStatus, updateApiStatus } from 'src/app/interfaces/api-status';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CombinedStateModel } from '.';\r\nimport { ClearAllStates } from '../actions/global.actions';\r\nimport {\r\n  GetHelpEnrichment,\r\n  HandleHelpEnrichmentResponse,\r\n  SwitchHelp,\r\n  ToggleHelpIsActive,\r\n} from '../actions/content.actions';\r\nimport {\r\n  normalizeHelpContent,\r\n} from './normalizers/content.normalizer';\r\nimport { HelpEnrichment, HelpEnrichmentData } from 'src/app/models/audit-enrichment';\r\nimport { HelpObject } from 'src/app/interfaces/content';\r\n\r\nexport interface HelpStateModel extends ApiStatus {\r\n    nl: HelpEnrichmentData[] | null;\r\n    en: HelpEnrichmentData[] | null;\r\n    selectedHelp: HelpObject[];\r\n    isActive: boolean;\r\n}\r\n\r\nexport const defaultState: HelpStateModel = {\r\n  nl: null,\r\n  en: null,\r\n  hasApiError: false,\r\n  hasConnectionError: false,\r\n  isFetching: false,\r\n  isInitialised: false,\r\n  selectedHelp: null,\r\n  isActive: false\r\n};\r\n\r\n@State<HelpStateModel>({\r\n  name: 'help',\r\n  defaults: { ...defaultState },\r\n})\r\n@Injectable()\r\nexport class HelpState {\r\n  private headers: HttpHeaders = new HttpHeaders({\r\n    apiKey: environment.apiKey,\r\n  });\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private store: Store\r\n  ) {}\r\n\r\n  @Selector()\r\n  static selectedHelp({\r\n    selectedHelp,\r\n  }: HelpStateModel): HelpObject[] {\r\n    return selectedHelp;\r\n  }\r\n\r\n  @Selector()\r\n  static isHelpActive({\r\n    isActive,\r\n  }: HelpStateModel): boolean {\r\n    return isActive;\r\n  }\r\n\r\n  @Action(ToggleHelpIsActive)\r\n  async toggleHelpIsActive(ctx: StateContext<HelpStateModel>){\r\n    ctx.setState((oldState) => ({\r\n        ...oldState,\r\n        isActive: !oldState.isActive\r\n    }));\r\n  }\r\n\r\n  @Action(SwitchHelp)\r\n  async switchHelp(ctx: StateContext<HelpStateModel>) {\r\n    const { participant } = this.store.snapshot() as CombinedStateModel;\r\n    const { languageCode } = participant;\r\n    const translations = ctx.getState()[languageCode]?.map(normalizeHelpContent);\r\n    if (!translations) {\r\n      return ctx.dispatch(new GetHelpEnrichment());\r\n    }\r\n    ctx.patchState({\r\n      selectedHelp: translations,\r\n    });\r\n  }\r\n\r\n  @Action(GetHelpEnrichment)\r\n  async GetHelpEnrichment(\r\n    ctx: StateContext<HelpStateModel>\r\n  ): Promise<void> {\r\n    const { participant } = this.store.snapshot() as CombinedStateModel;\r\n    const { languageCode } = participant;\r\n    ctx.patchState({ ...updateApiStatus({ isFetching: true }) });\r\n    this.http.get<HelpEnrichment>(this.constructUrl(languageCode),{headers:this.headers}).subscribe({\r\n      next: (data) => ctx.dispatch(new HandleHelpEnrichmentResponse(data)),\r\n      error: (e) => console.warn(e),\r\n    });\r\n  }\r\n\r\n  @Action(HandleHelpEnrichmentResponse)\r\n  handleHelpEnrichmentResponse(\r\n    ctx: StateContext<HelpStateModel>,\r\n    { enrichment }: HandleHelpEnrichmentResponse\r\n  ) {\r\n    const { participant } = this.store.snapshot() as CombinedStateModel;\r\n    const { languageCode } = participant;\r\n    ctx.setState((oldState) => ({\r\n      ...oldState,\r\n      ...updateApiStatus({ isInitialised: true }),\r\n      [languageCode]: enrichment.data\r\n    }));\r\n    ctx.dispatch(new SwitchHelp());\r\n  }\r\n\r\n  // @Action(ClearAllStates)\r\n  // async clearState(ctx: StateContext<HelpStateModel>) {\r\n  //   ctx.setState({ ...defaultState });\r\n  // }\r\n    \r\n  private constructUrl(languageCode: string): string {\r\n    return `${environment.endpoints.root}${environment.endpoints.help}?lang=${languageCode}`;\r\n  }\r\n\r\n  // ngxsOnInit(ctx: StateContext<HelpStateModel>){\r\n  //   ctx.dispatch(new SwitchHelp());\r\n  // }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Action, NgxsOnInit, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { LanguageCode } from 'src/app/enums/language';\nimport { ApiStatus, updateApiStatus } from 'src/app/interfaces/api-status';\nimport { environment } from 'src/environments/environment';\nimport { CombinedStateModel } from '.';\nimport { ClearAllStates } from '../actions/global.actions';\nimport {\n  GetStatusTexts,\n  HandleAuditStatusResponse,\n  SwitchStatusTexts,\n} from '../actions/status-texts.actions';\n\nexport interface AuditStatusText {\n  StatusText: string;\n  CommText: string;\n}\n\nexport type AuditStatusTextModel = Record<LanguageCode, AuditStatusText[]>;\n\nexport interface StatusTextsStateModel extends ApiStatus, AuditStatusTextModel {\n  selectedStatusTexts: AuditStatusText[] | null;\n}\n\ntype Context = StateContext<StatusTextsStateModel>;\n\nexport const defaultState: StatusTextsStateModel = {\n  nl: null,\n  en: null,\n  hasApiError: false,\n  hasConnectionError: false,\n  isFetching: false,\n  isInitialised: false,\n  selectedStatusTexts: null,\n};\n\n@State<StatusTextsStateModel>({\n  name: 'statusTexts',\n  defaults: { ...defaultState },\n})\n@Injectable()\nexport class StatusTextsState {\n  \n  private headers: HttpHeaders = new HttpHeaders({\n    apiKey: environment.apiKey\n  })\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private store: Store\n  ) {}\n\n  @Selector()\n  static selectedStatusTexts({\n    selectedStatusTexts,\n  }: StatusTextsStateModel): AuditStatusText[] {\n    return selectedStatusTexts;\n  }\n\n  @Action(SwitchStatusTexts)\n  async switchStatusTexts(ctx: Context) {\n    const { participant } = this.store.snapshot() as CombinedStateModel;\n    const { languageCode } = participant;\n    const translations = ctx.getState()[languageCode];\n    if (!translations) {\n      return ctx.dispatch(new GetStatusTexts());\n    }\n    ctx.patchState({\n      selectedStatusTexts: translations,\n    });\n  }\n\n  @Action(GetStatusTexts)\n  async getStatusTexts(ctx: Context) {\n    ctx.patchState({ ...updateApiStatus({ isFetching: true }) });\n    const { participant } = this.store.snapshot() as CombinedStateModel;\n    const { languageCode } = participant;\n    const url = `${environment.endpoints.root+environment.endpoints.statusTexts}?lang=${languageCode}`;\n    this.http.get<AuditStatusText[]>(url, {headers:this.headers}).subscribe({\n      next: (data) =>\n        ctx.dispatch(new HandleAuditStatusResponse(data, languageCode)),\n      error: (e: any) => {\n        console.warn(e.message || e);\n        this.router.navigate(['/', 'login']);\n      },\n    });\n  }\n\n  @Action(HandleAuditStatusResponse)\n  async setStatusTexts(\n    ctx: Context,\n    { response, lang }: HandleAuditStatusResponse\n  ) {\n    ctx.patchState({\n      ...updateApiStatus({ isInitialised: true }),\n      [lang]: response,\n    });\n    ctx.dispatch(new SwitchStatusTexts());\n  }\n\n  // @Action(ClearAllStates)\n  // async clearState(ctx: Context) {\n  //   ctx.setState({ ...defaultState });\n  // }\n  \n  // ngxsOnInit(ctx: StateContext<StatusTextsStateModel>){\n  //   ctx.dispatch(new SwitchStatusTexts());\n  // }\n}\n","import { StudentAdmissionRaw } from 'src/app/models/student-admission';\n\nexport class GetStudentAdmissions {\n  static readonly type = '[Student Admissions component] GetStudentAdmissions';\n  constructor(public guid?: string, public participantId?: string) {}\n}\n\nexport class SetSelectedGuid {\n  static readonly type = '[Student Admissions component] SetSelectedGuid';\n  constructor(public guid: string, public status: string, public locked: boolean, public contextColor: string) {}\n}\n\nexport class SetSelectedNodeId {\n  static readonly type = '[Student Admissions component] SetSelectedNodeId';\n  constructor(public id: string){}\n}\n\nexport class HandleAdmissionsResponse {\n  static readonly type = '[Student Admissions state] HandleAdmissionsResponse';\n  constructor(public data: StudentAdmissionRaw[], public guid?: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\nimport { SafariViewController } from '@ionic-native/safari-view-controller/ngx';\nimport { MenuItemOptions } from 'src/app/interfaces/content';\nimport { PlatformService } from './platform.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LinkService {\n    private defaultNavigationStyle: string = '_blank';\n    constructor(\n        private platform: PlatformService,\n        private iab: InAppBrowser,\n        private safariViewController: SafariViewController\n    ){}\n\n  async openUrl(url: string, options: MenuItemOptions = {external: false,attributes: null}) {\n    if (this.platform.isWeb()) {\n      try {\n        window.open(url, (options.attributes?.target ? options.attributes.target:this.defaultNavigationStyle)).focus();\n      } catch(error){\n        console.error(error);\n        window.location.href = url;\n      }\n    } else {\n      try {\n        this.openSafariWebView(url);\n      } catch (e) {\n        this.openInAppBrowser(url);\n      }\n    }\n  }\n\n  async openSafariWebView(url: string) {\n    await this.safariViewController.isAvailable();\n    this.safariViewController\n      .show({\n        url: url,\n        hidden: false, // default false. You can use this to load cookies etc in the background (see issue #1 for details).\n        animated: false, // default true, note that 'hide' will reuse this preference (the 'Done' button will always animate though)\n        transition: 'curl', // (this only works in iOS 9.1/9.2 and lower) unless animated is false you can choose from: curl, flip, fade, slide (default)\n        enterReaderModeIfAvailable: false, // default false\n        tintColor: '#00ffff', // default is ios blue\n        barColor: '#0000ff', // on iOS 10+ you can change the background color as well\n        controlTintColor: '#ffffff', // on iOS 10+ you can override the default tintColor\n      })\n      .subscribe((result, ...other) => {\n        console.log(other);\n        console.log(result);\n        if (result.event === 'opened') {\n          console.log('opened');\n        } else if (result.event === 'loaded') {\n          console.log('loaded');\n        } else if (result.event === 'closed') {\n          console.log('closed');\n        }\n      });\n  }\n\n  openInAppBrowser(url: string) {\n    const iab = this.iab.create(url, '_system');\n    iab.on('loadstop').subscribe((e) => console.log('loadstop: ', e));\n  }\n}","export class SetDataUploadState {\r\n  static readonly type = '[DataUpload State] SetDataUploadState';\r\n  constructor(\r\n    public completed: boolean,\r\n    public formData: FormData,\r\n    public errors: string[]\r\n  ) {}\r\n}\r\n\r\nexport class ClearDataUploadState {\r\n  static readonly type = '[DataUpload State] ClearDataUploadState';\r\n  constructor() {}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { StorageService } from '../services/storage.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CanActivateProtectedRouteGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private storageService: StorageService,\n    private store: Store\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const hasValidAccessToken = await this.storageService.hasValidAccessToken();\n    if (hasValidAccessToken) {\n      return true;\n    }\n    this.router.navigate(['/', 'login']);\n    return false;\n  }\n}\n","import {\n  AuditTitle,\n  TaskEnrichmentData,\n} from 'src/app/models/audit-enrichment';\nimport {\n  StudentAuditRaw,\n  StudentAudit,\n  AuditGroup,\n  AuditGroupRaw,\n  StudentAuditDocumentRaw,\n  StudentAuditDocument,\n  StatusText,\n} from 'src/app/models/student-audit';\n\nexport const normalizeAuditGroup = (\n  raw: AuditGroupRaw,\n  taskEnrichments: TaskEnrichmentData[]\n): AuditGroup => {\n  const translatedTitles = taskEnrichments.map(({ attributes }) => ({\n    id: attributes.field_audit_node_id,\n    title: attributes.title,\n  }));\n  return {\n    categ: `category.${raw.Categ}`,\n    studentAudits: raw.StudentAudits.map(normalizeAudits).map(\n      translateAudit(translatedTitles)\n    ),\n  };\n};\n\nexport const translateAudit = (auditTitles: AuditTitle[]) => (\n  audit: StudentAudit\n): StudentAudit => {\n  const matchingAuditTitle = auditTitles.filter(({ id }) => id == audit.id)[0];\n  return {\n    ...audit,\n    nodeText: matchingAuditTitle ? matchingAuditTitle.title : '',\n  };\n};\n\nexport const normalizeAudits = (raw: StudentAuditRaw): StudentAudit => {\n  return {\n    statusText: raw.StatusText,\n    isCompleted: raw.StatusText === StatusText.COMPLETED,\n    id: raw.ID,\n    nodeText: raw.NodeText,\n    nodeDeadline: raw.NodeDeadline,\n    nodeTaskType: raw.NodeTaskType,\n    nodeWaitStep: raw.NodeWaitStep,\n    nodeDocType: raw.NodeDocType,\n    nodeDocTypeTxt: raw.NodeDocTypeTxt,\n    nodeDocFileExt: raw.NodeDocFileExt,\n    nodeFeedback: raw.NodeFeedback,\n    nodeUrl: raw.NodeUrl,\n    nodeTaskCategory: raw.NodeTaskCateg\n  };\n};\n\nexport const normalizeAuditDocument = (raw: StudentAuditDocumentRaw): StudentAuditDocument => {\n  return {\n    id: raw.DocumentID,\n    nodeId: raw.NodeID,\n    name: raw.FileName,\n    originalName: raw.FileNameOriginal,\n    uploadTime: raw.UploadTime,\n    uploadBy: raw.UploadBy,\n    locked: raw.Locked,\n    authenticated: raw.Authenticated,\n    authenticatedDate: raw.AuthenticatedDate\n  };\n}\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { App } from '@capacitor/app';\nimport {\n  faBars,\n  faHome,\n  IconDefinition,\n  faEnvelope\n} from '@fortawesome/free-solid-svg-icons';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\nimport { SafariViewController } from '@ionic-native/safari-view-controller/ngx';\nimport { ActionSheetController, NavController } from '@ionic/angular';\nimport { ActionSheetButton } from '@ionic/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, takeUntil, tap } from 'rxjs/operators';\nimport { MenuItemOptions, MenuObject } from './interfaces/content';\nimport { LinkService } from './services/link.service';\n\nimport { PlatformService } from './services/platform.service';\nimport { StorageService } from './services/storage.service';\nimport { ToggleHelpIsActive } from './store/actions/content.actions';\nimport { MenuState } from './store/state/menu.state';\nimport { ParticipantState } from './store/state/participant.state';\nimport { MuMenuPopoverComponent } from './ui-components/elements/mu-menu-popover/mu-menu-popover.component';\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent\nimplements OnInit, OnDestroy{\n  shouldRenderNativeNavigation: boolean;\n  faHome: IconDefinition = faHome;\n  faBars: IconDefinition = faBars;\n  faEnvelope: IconDefinition = faEnvelope;\n  notificationCount: number;\n  participantId: string;\n  ngUnsubscribe = new Subject();\n  public menuItems: ActionSheetButton[];\n\n\n  @Select(ParticipantState.participantId)\n  participantIdStream: Observable<string>;\n\n  constructor(\n    private actionsheetCtrl: ActionSheetController,\n    private navCtrl: NavController,\n    private platform: PlatformService,\n    private storageService: StorageService,\n    private translateService: TranslateService,\n    private router: Router,\n    private zone: NgZone,\n    private store: Store,\n    private linkService: LinkService\n  ) {}\n\n  ngOnInit() {\n    this.storageService.initializeStoreData();\n    this.onOpenFromBrowser();\n    this.listenToParticipantChanges();\n    this.listenToSelectedMenuChanges();\n    this.shouldRenderNativeNavigation = !this.platform.isWeb();\n  }\n\n  onOpenFromBrowser() {\n    let path: string;\n    let query: string;\n    let code: string;\n    let rest: string;\n    App.addListener('appUrlOpen', ({ url }: { url: string }) => {\n      this.zone.run(() => {\n        const [urlScheme, route] = url.split('://');\n        if (route) {\n          [path, rest] = route.split('?');\n          [rest, query] = route.split('code=');\n          [code] = query && query.split('&');\n        }\n        if (path && code) {\n          this.router.navigate(['/', path], { queryParams: { code } });\n        }\n      });\n    });\n  }\n\n  goToHome() {\n    this.navCtrl.navigateBack(['/', 'home']);\n  }\n\n  goToMessages(){\n    this.router.navigate(['/','messages']);\n  }\n\n  @Select(MenuState.selectedMenu)\n  selectedMenuStream: Observable<MenuObject[]>;\n\n  private listenToSelectedMenuChanges(): void{\n\n    this.selectedMenuStream\n      .pipe(\n        takeUntil(this.ngUnsubscribe),\n        filter((value) => !!value),\n        tap((menuObjects: MenuObject[]) => {\n          this.menuItems = menuObjects.map((item: MenuObject) => {\n            return {\n              text: item.title,\n              role: 'destructive',\n              handler: () => {\n                this.linkService.openUrl(item.url, item.options);\n              }\n            };\n          });\n        })\n      )\n      .subscribe();\n  }\n\n  async presentNativeMenu() {\n    const actionSheet = await this.actionsheetCtrl.create(\n    {\n      header: 'Menu',\n      cssClass: 'native-menu',\n      buttons: [\n        ...this.menuItems,\n        {\n          text: this.translateService.instant('elements.inbox'),\n          role: 'destructive',\n          icon: 'mail',\n          handler: () => {\n            this.router.navigate(['/', 'messages']);\n          }\n        },\n        {\n          text: this.translateService.instant('elements.help'),\n          role: 'destructive',\n          icon: 'help-circle',\n          handler: async () => {\n            await actionSheet.dismiss();\n            this.store.dispatch(new ToggleHelpIsActive());\n          }\n        },\n        {\n          text: this.translateService.instant('elements.logout'),\n          role: 'destructive',\n          icon: 'log-out',\n          handler: () => {\n            this.router.navigate(['/', 'logout']);\n          },\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  private listenToParticipantChanges(): void{\n    this.participantIdStream.pipe(\n      takeUntil(this.ngUnsubscribe),\n      tap((participantId) => {\n        this.participantId = participantId;\n      })\n    )\n    .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.unsubscribe();\n  }\n\n\n}\n","import { HelpEnrichmentData, MenuEnrichmentData, TaskEnrichmentData } from 'src/app/models/audit-enrichment';\nimport { ContentObject, HelpObject, MenuObject } from 'src/app/interfaces/content';\n\nexport const normalizeContent = ({\n  attributes: { field_after, field_before, field_audit_node_id, title, langcode },\n}: TaskEnrichmentData): ContentObject => ({\n  before: field_before ? field_before.processed : null,\n  after: field_after ? field_after.processed : null,\n  contentTitle: title,\n  auditId: field_audit_node_id,\n  langcode: langcode\n});\n\nexport const normalizeHelpContent = ({\n  attributes: { field_text, title },\n}: HelpEnrichmentData): HelpObject => ({\n  title: title,\n  content: field_text.processed\n});\n\nexport const normalizeMenuContent = ({\n  attributes: { description,enabled,expanded,menu_name,options,parent,provider,title,url,weight },\n}: MenuEnrichmentData): MenuObject => ({\n  description,\n  enabled,\n  expanded,\n  menu_name,\n  options,\n  parent,\n  provider,\n  title,\n  url,\n  weight\n});\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ApiStatus, updateApiStatus } from 'src/app/interfaces/api-status';\r\n\r\nimport {\r\n    StudentAuditDocument,\r\n    StudentAuditDocumentRaw,\r\n} from 'src/app/models/student-audit';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ClearAllStates } from '../actions/global.actions';\r\nimport { GetStudentAuditDocuments, HandleAuditsResponse, SetSelectedStudentAuditId } from '../actions/student-audit-documents.actions';\r\nimport { normalizeAuditDocument } from './normalizers/student-audit.normalizer';\r\nimport { ParticipantState } from './participant.state';\r\nimport { StudentAdmissionsState } from './student-admissions.state';\r\nimport { StudentAuditsState } from './student-audits.state';\r\n\r\nexport interface StudentAuditDocumentsStateModel extends ApiStatus{\r\n    auditDocuments: StudentAuditDocument[];\r\n    selectedAuditId?: string;\r\n    showAuditContent: boolean;\r\n}\r\n  \r\nconst defaultState: StudentAuditDocumentsStateModel = {\r\n    auditDocuments: [],\r\n    showAuditContent: false,\r\n    isFetching: false,\r\n    isInitialised: false,\r\n    hasApiError: false,\r\n    hasConnectionError: false\r\n};\r\n\r\n@State<StudentAuditDocumentsStateModel>({\r\n    name: 'studentAuditDocument',\r\n    defaults: { ...defaultState },\r\n  })\r\n  @Injectable()\r\n  export class StudentAuditDocumentsState {\r\n    \r\n    private headers: HttpHeaders = new HttpHeaders({\r\n      apiKey: environment.apiKey\r\n    })\r\n    constructor(\r\n      private http: HttpClient,\r\n      private router: Router,\r\n      private store: Store,\r\n      private zone: NgZone,\r\n      private toast: ToastController\r\n    ) {}\r\n    \r\n  @Selector()\r\n  static apiStatus({\r\n    isFetching,\r\n    isInitialised,\r\n    hasApiError,\r\n    hasConnectionError,\r\n  }: StudentAuditDocumentsStateModel): ApiStatus {\r\n    return {\r\n      isFetching,\r\n      isInitialised,\r\n      hasApiError,\r\n      hasConnectionError,\r\n    };\r\n  }\r\n\r\n  @Selector()\r\n  static auditDocuments({ auditDocuments }: StudentAuditDocumentsStateModel): StudentAuditDocument[] {\r\n    return auditDocuments;\r\n  }\r\n  \r\n  @Action(GetStudentAuditDocuments)\r\n  async getStudentAuditDocuments(\r\n    ctx: StateContext<StudentAuditDocumentsStateModel>\r\n  ): Promise<void> {\r\n    ctx.patchState({ ...updateApiStatus({ isFetching: true }) });\r\n    this.http.get<StudentAuditDocumentRaw[]>(this.constructUrl(), {headers:this.headers}).subscribe({\r\n      next: (data) => {\r\n        ctx.dispatch(new HandleAuditsResponse(data));\r\n      },\r\n      error: (e: any) => {\r\n        console.warn(e.error.Message);\r\n        this.zone.run(async () => {\r\n          const toast = await this.toast.create({\r\n            message: 'Error: Failure to fetch Documents',\r\n            position: 'bottom',\r\n            color: 'danger',\r\n            duration: 5000\r\n          });\r\n          await toast.present();\r\n          // this.router.navigate(['/', 'logout']);\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(HandleAuditsResponse)\r\n  handleAuditsResponse(\r\n    ctx: StateContext<StudentAuditDocumentsStateModel>,\r\n    { data }: HandleAuditsResponse\r\n  ): void {\r\n    const {selectedAuditId} = this.store.selectSnapshot(StudentAuditsState);\r\n    ctx.setState((oldState) => ({\r\n      ...oldState,\r\n      selectedAuditId,\r\n      auditDocuments: data.map(studentRaw => normalizeAuditDocument(studentRaw)),\r\n    }));\r\n  }\r\n\r\n  \r\n  @Action(SetSelectedStudentAuditId)\r\n  setSelectedStudentAuditId(\r\n    ctx: StateContext<StudentAuditDocumentsStateModel>,\r\n    { id }: SetSelectedStudentAuditId\r\n  ): void {\r\n    ctx.setState(\r\n      (oldState): StudentAuditDocumentsStateModel => ({\r\n        ...oldState,\r\n        selectedAuditId: id,\r\n        showAuditContent: true,\r\n      })\r\n    );\r\n  }\r\n  \r\n  @Selector()\r\n  static selectedAuditDocument({\r\n    auditDocuments,\r\n    selectedAuditId,\r\n  }: StudentAuditDocumentsStateModel): StudentAuditDocument[] {\r\n    const studentAuditDocuments = auditDocuments\r\n      .filter(({ nodeId }) => nodeId === selectedAuditId);\r\n    return studentAuditDocuments;\r\n  }\r\n  @Action(ClearAllStates)\r\n  clearState(ctx: StateContext<StudentAuditDocumentsStateModel>): void {\r\n    ctx.setState({ ...defaultState });\r\n  }\r\n  \r\n  private constructUrl() {\r\n    const { participantId } = this.store.selectSnapshot(ParticipantState);\r\n    const { selectedGuid } = this.store.selectSnapshot(StudentAdmissionsState);\r\n    \r\n    return `${environment.endpoints.root+environment.endpoints.student+'/'+participantId+'/'+environment.endpoints.audits}/${selectedGuid}/${environment.endpoints.auditDocuments}`;\r\n  }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ApiStatus, updateApiStatus } from 'src/app/interfaces/api-status';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ClearAllStates } from '../actions/global.actions';\r\nimport {\r\n  GetMessageEnrichment,\r\n  GetMessages,\r\n  HandleMessageEnrichmentResponse,\r\n  MarkMessageAsRead,\r\n  SwitchMessage,\r\n  ToggleMessagesIsActive,\r\n} from '../actions/message.actions';\r\nimport {\r\n  normalizeMessageContent,\r\n  setReadMessageStatus,\r\n} from './normalizers/message.normalizer';\r\nimport { Message, MessageRaw, MessageStatus } from 'src/app/interfaces/message';\r\nimport { ParticipantState } from './participant.state';\r\n\r\nexport interface MessageStateModel extends ApiStatus {\r\n  messages: Message[] | null;\r\n  messageData: MessageRaw[];\r\n  selectedMessage: Message;\r\n  isActive: boolean;\r\n}\r\n\r\nexport const defaultState: MessageStateModel = {\r\n  messages: null,\r\n  messageData: null,\r\n  selectedMessage: null,\r\n  isActive: null,\r\n  hasApiError: false,\r\n  hasConnectionError: false,\r\n  isFetching: false,\r\n  isInitialised: false\r\n};\r\n\r\n@State<MessageStateModel>({\r\n  name: 'Message',\r\n  defaults: { ...defaultState },\r\n})\r\n@Injectable()\r\nexport class MessageState {\r\n  private headers: HttpHeaders = new HttpHeaders({\r\n    apiKey: environment.apiKey,\r\n  });\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private store: Store\r\n  ) {}\r\n\r\n\r\n  @Selector()\r\n  static apiStatus({\r\n    isFetching,\r\n    isInitialised,\r\n    hasApiError,\r\n    hasConnectionError,\r\n  }: MessageStateModel): ApiStatus {\r\n    return {\r\n      isFetching,\r\n      isInitialised,\r\n      hasApiError,\r\n      hasConnectionError,\r\n    };\r\n  }\r\n\r\n  @Selector()\r\n  static isMessagesActive({\r\n    isActive,\r\n  }: MessageStateModel): boolean {\r\n    return isActive;\r\n  }\r\n\r\n  @Action(ToggleMessagesIsActive)\r\n  async toggleMessagesIsActive(ctx: StateContext<MessageStateModel>){\r\n    ctx.setState((oldState) => ({\r\n        ...oldState,\r\n        isActive: !oldState.isActive\r\n    }));\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static selectedMessage({\r\n    selectedMessage,\r\n  }: MessageStateModel): Message {\r\n    return selectedMessage;\r\n  }\r\n\r\n  @Selector()\r\n  static messages({\r\n    messages,\r\n  }: MessageStateModel): Message[] {\r\n    return messages;\r\n  }\r\n\r\n\r\n  @Action(SwitchMessage)\r\n  async switchMessage(\r\n    ctx: StateContext<MessageStateModel>,\r\n    {id}: SwitchMessage\r\n    ) {\r\n    if(!id){\r\n      ctx.patchState({selectedMessage: null});\r\n    } else {\r\n      const message: Message = ctx.getState().messages?.filter(message => message.id == id)[0];\r\n      if (!message) {\r\n        return ctx.dispatch(new GetMessageEnrichment());\r\n      }\r\n      ctx.setState((oldState) => ({\r\n        ...oldState,\r\n        selectedMessage: message,\r\n        messages: oldState.messages.map((messageOld: Message) => {\r\n          const newMessage = {...messageOld}\r\n          if(newMessage.id === id){\r\n            if(newMessage.status === MessageStatus.UNREAD_NORMAL_PRIO || newMessage.status === MessageStatus.UNREAD_HIGH_PRIO){\r\n              ctx.dispatch(new MarkMessageAsRead(newMessage));\r\n              newMessage.status = setReadMessageStatus(newMessage.status);\r\n            }\r\n            newMessage.read = true;\r\n          }\r\n          return newMessage;\r\n        }),\r\n        messageData: oldState.messageData.map((messageRaw: MessageRaw) => {\r\n          const newMessageRaw = {...messageRaw}\r\n          if(newMessageRaw.MessageId === id){\r\n            newMessageRaw.Status = setReadMessageStatus(newMessageRaw.Status);\r\n          }\r\n          return newMessageRaw;\r\n        })\r\n      }));\r\n    }\r\n  }\r\n  \r\n  @Action(MarkMessageAsRead)\r\n  async markMessageAsRead(\r\n    ctx: StateContext<MessageStateModel>,\r\n    {message}: MarkMessageAsRead\r\n  ) {\r\n    const status: string = setReadMessageStatus(message.status);\r\n    this.http.post<any>(this.constructMessageUrl(message.id,status), {\r\n    }, {headers:this.headers}).subscribe({\r\n      next: (response) => {\r\n        console.log('Response',response);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  @Action(GetMessages)\r\n  async GetMessages(\r\n    ctx: StateContext<MessageStateModel>\r\n  ) {\r\n    const messages: Message[] = ctx.getState().messages || ctx.getState().messageData?.map(messageRaw => (normalizeMessageContent(messageRaw)));\r\n    if (!messages) {\r\n      return ctx.dispatch(new GetMessageEnrichment());\r\n    }\r\n  }\r\n  \r\n\r\n  @Action(GetMessageEnrichment)\r\n  async GetMessageEnrichment(\r\n    ctx: StateContext<MessageStateModel>\r\n  ): Promise<void> {\r\n    ctx.patchState({ ...updateApiStatus({ isFetching: true }) });\r\n\r\n    this.http.get<MessageRaw[]>(this.constructUrl(),{headers:this.headers}).subscribe({\r\n      next: (data) => ctx.dispatch(new HandleMessageEnrichmentResponse(data)),\r\n      error: (e) => {\r\n        ctx.dispatch(new HandleMessageEnrichmentResponse([]));\r\n      },\r\n    });\r\n    \r\n   \r\n  }\r\n\r\n  @Action(HandleMessageEnrichmentResponse)\r\n  handleMessageEnrichmentResponse(\r\n    ctx: StateContext<MessageStateModel>,\r\n    { messageResponse }: HandleMessageEnrichmentResponse\r\n  ) {\r\n    ctx.setState((oldState) => ({\r\n      ...oldState,\r\n      ...updateApiStatus({ isInitialised: true }),\r\n      messageData: messageResponse,\r\n      messages: messageResponse.map(normalizeMessageContent)\r\n    }));\r\n    ctx.dispatch(new GetMessages());\r\n  }\r\n\r\n  @Action(ClearAllStates)\r\n  async clearState(ctx: StateContext<MessageStateModel>) {\r\n    ctx.setState({ ...defaultState });\r\n  }\r\n\r\n  private constructUrl(): string {\r\n    const { participantId } = this.store.selectSnapshot(ParticipantState);\r\n    return `${environment.endpoints.root}${environment.endpoints.student}/${participantId}/${environment.endpoints.message}`;\r\n  }\r\n  \r\n  private constructMessageUrl(id: string, status: string){    \r\n    const { participantId } = this.store.selectSnapshot(ParticipantState);\r\n    return `${environment.endpoints.root}${environment.endpoints.student}/${participantId}/${environment.endpoints.message}/${id}/${environment.endpoints.messageStatus}?status=${status}`;\r\n  }\r\n}\r\n","export default \"<ion-app>\\n  <ion-tabs>\\n  </ion-tabs>\\n</ion-app>\\n\";","import {\n  StudentAdmissionRaw,\n  StudentAdmission,\n  AcademicPeriod,\n} from 'src/app/models/student-admission';\nexport const normalizeAdmission = (\n  raw: StudentAdmissionRaw\n): StudentAdmission => ({\n  educationProgramID: raw.EducationProgramID,\n  educationProgramName: raw.EducationProgramName,\n  educationProgramYear: raw.StudyYear,\n  educationProgramAcademicPeriod: raw.AcademicPeriod,\n  educationProgramDescription: raw.EducationProgramDescription,\n  guid: raw.Guid,\n  regStatus: raw.RegStatus,\n  regStatusText: raw.RegStatusText,\n  regType: raw.RegType,\n  regTypeText: raw.RegTypeText,  \n  admissionStatusText: raw.AdmissionStatusText,\n  admissionLock: raw.AdmissionLock,\n  contextColor: ''+raw.ContextualColor,\n});\n","import { Injectable } from '@angular/core';\r\nimport { State, Selector, Action, StateContext } from '@ngxs/store';\r\nimport { ClearDataUploadState, SetDataUploadState } from '../actions/data-upload.actions';\r\n\r\nexport interface DataUploadStateModel {\r\n  formData: FormData;\r\n  completed: boolean;\r\n  errors: string[];\r\n}\r\nexport const defaultState: DataUploadStateModel = {\r\n  formData: null,\r\n  completed: null,\r\n  errors: [],\r\n};\r\n@State<DataUploadStateModel>({\r\n  name: 'dataUpload',\r\n  defaults: { ...defaultState },\r\n})\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataUploadState {\r\n  @Selector()\r\n  static dataUploadState(stream: DataUploadStateModel): {} {\r\n    return stream;\r\n  }\r\n\r\n  @Action(SetDataUploadState)\r\n  setDataUploadState(\r\n    ctx: StateContext<DataUploadStateModel>,\r\n    payload: DataUploadStateModel\r\n  ): void {\r\n    ctx.setState(\r\n      (oldState): DataUploadStateModel => ({\r\n        ...oldState,\r\n        ...payload\r\n      })\r\n    );\r\n  }\r\n  @Action(ClearDataUploadState)\r\n  clearDataUploadState(ctx: StateContext<DataUploadStateModel>): void {\r\n    ctx.setState(\r\n      (oldState): DataUploadStateModel => ({\r\n        ...oldState,\r\n        completed: null,\r\n        formData: null,\r\n        errors: [],\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { IonicStorageModule } from '@ionic/storage-angular';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\nimport { OneSignal } from '@ionic-native/onesignal/ngx';\nimport { SafariViewController } from '@ionic-native/safari-view-controller/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { environment } from 'src/environments/environment';\nimport { CombinedState } from './store/state';\n\n// TO ALLOW AHEAD OF TIME COMPILATION\n\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    IonicModule.forRoot(),\n    IonicStorageModule.forRoot(),\n    NgxsModule.forRoot(CombinedState, {\n      developmentMode: !environment.production,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (HttpLoaderFactory),\n        deps: [HttpClient],\n      },\n    }),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n  ],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    SafariViewController,\n    InAppBrowser,\n    OneSignal,\n  ],\n})\nexport class AppModule {}\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport {\n  TaskEnrichment,\n  TaskEnrichmentData,\n} from 'src/app/models/audit-enrichment';\nimport { ContentObject } from 'src/app/interfaces/content';\nimport { environment } from 'src/environments/environment';\nimport {\n  GetTaskEnrichments,\n  HandleFailureEnrichmentResponse,\n  HandleTaskEnrichmentResponse,\n  LocationChangeRequest,\n  SwitchContentView,\n} from '../actions/content.actions';\nimport { ClearAllStates } from '../actions/global.actions';\nimport { normalizeContent } from './normalizers/content.normalizer';\nimport { SetSelectedStudentAuditId, SetShowAuditContent, SwitchAuditView } from '../actions/student-audits.actions';\nimport {\n  SetSelectedStudentAuditId as SetSelectedStudentAuditIdInDocScope\n} from 'src/app/store/actions/student-audit-documents.actions';\nimport { ApiStatus, updateApiStatus } from 'src/app/interfaces/api-status';\nimport { CombinedStateModel } from '.';\nimport { ParticipantState } from './participant.state';\nimport { StudentAdmissionsState } from './student-admissions.state';\nimport { SetSelectedGuid, SetSelectedNodeId } from '../actions/student-admissions.actions';\nimport { PlatformService } from '../../services/platform.service';\n\nexport interface ContentStateModel extends ApiStatus {\n  nl: TaskEnrichmentData[] | null;\n  en: TaskEnrichmentData[] | null;\n  renderedContent: ContentObject | null;\n}\n\nexport const defaultState: ContentStateModel = {\n  nl: null,\n  en: null,\n  renderedContent: null,\n  hasApiError: false,\n  hasConnectionError: false,\n  isFetching: false,\n  isInitialised: false,\n};\n\n@State<ContentStateModel>({\n  name: 'content',\n  defaults: { ...defaultState },\n})\n@Injectable()\nexport class ContentState {\n\n  private headers: HttpHeaders = new HttpHeaders({\n    apiKey: environment.apiKey\n  })\n  @Selector()\n  static apiStatus({\n    isFetching,\n    isInitialised,\n    hasApiError,\n    hasConnectionError,\n  }: ContentStateModel): ApiStatus {\n    return {\n      isFetching,\n      isInitialised,\n      hasApiError,\n      hasConnectionError,\n    };\n  }\n\n  @Selector()\n  static renderedContent({\n    renderedContent,\n  }: ContentStateModel): ContentObject {\n    return renderedContent;\n  }\n\n  constructor(private http: HttpClient, private store: Store, private platform: PlatformService) {}\n\n  @Action(SwitchContentView)\n  switchContentView(ctx: StateContext<ContentStateModel>): void {\n    const state = ctx.getState();\n    const languageSpecificEnrichment = state[this.localData.languageCode];\n    if (!languageSpecificEnrichment) {\n      ctx.dispatch(new GetTaskEnrichments());\n      return;\n    }\n    const requestedContent = this.searchContent(state);\n    ctx.setState((oldState) => ({\n      ...oldState,\n      renderedContent: requestedContent\n    }));\n    ctx.dispatch(new SwitchAuditView(languageSpecificEnrichment));\n  }\n\n  @Action(GetTaskEnrichments)\n  async getTaskEnrichments(\n    ctx: StateContext<ContentStateModel>\n  ): Promise<void> {\n    ctx.patchState({ ...updateApiStatus({ isFetching: true }) });\n    this.http.get<TaskEnrichment>(this.constructUrl(),{headers:this.headers}).subscribe({\n      next: (data) => ctx.dispatch(new HandleTaskEnrichmentResponse(data)),\n      error: (e) => ctx.dispatch(new HandleFailureEnrichmentResponse(e)),\n    });\n  }\n\n  @Action(HandleTaskEnrichmentResponse)\n  handleTaskEnrichmentResponse(\n    ctx: StateContext<ContentStateModel>,\n    { enrichment }: HandleTaskEnrichmentResponse\n  ) {\n    const { languageCode } = this.localData;\n    ctx.setState((oldState) => ({\n      ...oldState,\n      ...updateApiStatus({ isInitialised: true }),\n      [languageCode]: [...enrichment.data],\n    }));\n    ctx.dispatch(new SwitchContentView());\n  }\n\n  @Action(HandleFailureEnrichmentResponse)\n  handleFailureEnrichmentResponse(\n    ctx: StateContext<ContentStateModel>,\n    { response }: HandleFailureEnrichmentResponse\n  ) {\n    console.warn(response);\n    const { languageCode } = this.localData;\n    if(response.status === 500){\n      ctx.setState((oldState) => ({\n        ...oldState,\n        ...updateApiStatus({ isInitialised: true }),\n        [languageCode]: [],\n      }));\n    }\n\n  }\n\n  @Action(LocationChangeRequest)\n  locationChangeRequest(\n    ctx: StateContext<ContentStateModel>,\n    { locationRequest }: LocationChangeRequest\n  ) {\n    if(locationRequest.admission){\n      // SET THE ADMISSION\n      this.store.dispatch(new SetSelectedGuid(locationRequest.admission.guid, locationRequest.admission.status, locationRequest.admission.locked, locationRequest.admission.contextColor));\n      if(locationRequest.audit){\n        // SET THE AUDIT\n        this.store.dispatch(new SetSelectedNodeId(locationRequest.audit));\n        this.store.dispatch(new SetSelectedStudentAuditId(locationRequest.audit));\n        this.store.dispatch(new SetSelectedStudentAuditIdInDocScope(locationRequest.audit));\n      }\n      // SHOW THE CONTENT\n      this.store.dispatch(new SetShowAuditContent(true));\n      if(this.platform.isWeb()){\n        this.store.dispatch(new SwitchContentView());\n      }\n    }\n  }\n\n  @Action(ClearAllStates)\n  clearState(ctx: StateContext<ContentStateModel>): void {\n    ctx.setState({ ...defaultState });\n  }\n\n  private get localData() {\n    const {\n      studentAudits,\n      studentAdmissions,\n      participant,\n    } = this.store.snapshot() as CombinedStateModel;\n    const { selectedAuditId } = studentAudits;\n    const { selectedGuid } = studentAdmissions;\n    const { participantId, languageCode } = participant;\n\n    return {\n      selectedAuditId,\n      selectedGuid,\n      participantId,\n      languageCode,\n    };\n  }\n\n  private searchContent(state: ContentStateModel): ContentObject {\n    const { languageCode, selectedAuditId } = this.localData;\n    return state[languageCode]\n      .filter((c) => c.attributes.field_audit_node_id === selectedAuditId)\n      .map(normalizeContent)[0];\n  }\n  private constructUrl(): string {\n    const { languageCode } = this.localData;\n    const { participantId } = this.store.selectSnapshot(ParticipantState);\n    const { selectedGuid } = this.store.selectSnapshot(StudentAdmissionsState);\n\n    return `${environment.endpoints.root+environment.endpoints.student+'/'+participantId+'/'+environment.endpoints.audits}/${selectedGuid}/${environment.endpoints.enrichment}?lang=${languageCode}`;\n  }\n}\n","import { LanguageCode } from 'src/app/enums/language';\nimport { ParticipantStateModel } from '../state/participant.state';\n\nexport class InitialiseParticipantData {\n  static readonly type = '[route guards] InitialiseParticipantData';\n  constructor() {}\n}\nexport class SetParticipantData {\n  static readonly type = '[Login component] SetParticipantData';\n  constructor(public participantData: Partial<ParticipantStateModel>) {}\n}\n\nexport class SetLanguageCode {\n  static readonly type = '[Top Menu component] SetLanguage';\n  constructor(public languageCode: LanguageCode) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { HelpEnrichment, LocationChangeData, MenuEnrichment, TaskEnrichment } from 'src/app/models/audit-enrichment';\n\nexport class GetTaskEnrichments {\n  static readonly type = '[Content component] GetTaskEnrichments';\n  constructor() {}\n}\n\nexport class HandleTaskEnrichmentResponse {\n  static readonly type = '[Content State] HandleTaskEnrichmentResponse';\n  constructor(public enrichment: TaskEnrichment) {}\n}\n\nexport class HandleFailureEnrichmentResponse {\n  static readonly type = '[Content State] HandleFailureEnrichmentResponse';\n  constructor(public response: HttpErrorResponse) {}\n}\n\nexport class GetHelpEnrichment {\n  static readonly type = '[Help State] GetHelpEnrichment'\n  constructor() {}\n}\nexport class HandleHelpEnrichmentResponse {\n  static readonly type = '[Help State] HandleHelpEnrichmentResponse';\n  constructor(public enrichment: HelpEnrichment) {}\n}\n\nexport class SwitchHelp {\n  static readonly type = '[Help State] SwitchHelp';\n  constructor(){}\n}\n\nexport class ToggleHelpIsActive {\n  static readonly type = '[Help State] ToggleHelpIsActive';\n  constructor(){}\n}\n\nexport class GetMenuEnrichment {\n  static readonly type = '[Menu State] GetMenuEnrichment'\n  constructor() {}\n}\nexport class HandleMenuEnrichmentResponse {\n  static readonly type = '[Menu State] HandleMenuEnrichmentResponse';\n  constructor(public enrichment: MenuEnrichment) {}\n}\nexport class SwitchMenu {\n  static readonly type = '[Menu State] SwitchMenu';\n  constructor(){}\n}\nexport class SwitchContentView {\n  static readonly type =\n    '[Content State | Language Popover | Student Audit Groups Component] SwitchContentView';\n  constructor() {}\n}\n\nexport class LocationChangeRequest {\n  static readonly type =\n  '[Content State] LocationChangeRequest';\n  constructor(public locationRequest: LocationChangeData){}\n}","import { Message, MessageRaw } from \"src/app/interfaces/message\";\n\nexport class GetMessages {\n  static readonly type = '[Message State] GetMessages';\n  constructor(){}\n}\nexport class GetMessagesByAdmission {\n  static readonly type = '[Message State] GetMessagesByAdmission';\n  constructor(public admissionId: string){}\n}\nexport class GetMessageEnrichment {\n  static readonly type = '[Message State] GetMessageEnrichment'\n  constructor() {}\n}\nexport class HandleMessageEnrichmentResponse {\n  static readonly type = '[Message State] HandleMessageEnrichmentResponse';\n  constructor(public messageResponse: MessageRaw[]) {}\n}\nexport class SwitchMessage {\n  static readonly type = '[Message State] SwitchMessage';\n  constructor(public id: string){}\n}\nexport class MarkMessageAsRead {\n  static readonly type = '[Message State] MarkMessageAsRead';\n  constructor(public message: Message){}\n}\n\nexport class ToggleMessagesIsActive {\n  static readonly type = '[Message State] ToggleMessagesIsActive';\n  constructor(){}\n}","import { StateClass } from '@ngxs/store/internals';\nimport { StudentAuditDocument } from 'src/app/models/student-audit';\nimport { ContentState, ContentStateModel } from './content.state';\nimport { DataUploadState, DataUploadStateModel } from './data-upload.state';\nimport { ParticipantState, ParticipantStateModel } from './participant.state';\nimport { StatusTextsState, StatusTextsStateModel } from './status-texts.state';\nimport { HelpState, HelpStateModel } from './help.state';\nimport { MenuState, MenuStateModel } from './menu.state';\nimport {\n  StudentAdmissionsState,\n  StudentAdmissionsStateModel,\n} from './student-admissions.state';\nimport { StudentAuditDocumentsState, StudentAuditDocumentsStateModel } from './student-audit-documents.state';\nimport {\n  StudentAuditsState,\n  StudentAuditsStateModel,\n} from './student-audits.state';\nimport { MessageState } from './message.state';\n\nexport type CombinedStateModel = {\n  content: ContentStateModel;\n  participant: ParticipantStateModel;\n  statusTexts: StatusTextsStateModel;\n  help: HelpStateModel;\n  menu: MenuStateModel;\n  message: MessageState;\n  studentAdmissions: StudentAdmissionsStateModel;\n  studentAudits: StudentAuditsStateModel;\n  studentAuditDocuments: StudentAuditDocumentsStateModel;\n  dataUpload: DataUploadStateModel\n};\n\nexport const CombinedState: StateClass<any>[] = [\n  ContentState,\n  ParticipantState,\n  StatusTextsState,\n  HelpState,\n  MenuState,\n  MessageState,\n  StudentAdmissionsState,\n  StudentAuditsState,\n  StudentAuditDocumentsState,\n  DataUploadState\n];\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { StorageService } from '../services/storage.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CanActivatePublicRouteGuard implements CanActivate {\n  constructor(\n    public router: Router,\n    private storageService: StorageService,\n    private store: Store\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const hasValidAccessToken = await this.storageService.hasValidAccessToken();\n    if (hasValidAccessToken) {\n      this.router.navigate(['/', 'home']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { LanguageCode } from 'src/app/enums/language';\nimport { AuditStatusText } from '../state/status-texts.state';\n\nexport class ClearAllStates {\n  static readonly type = '[Logout Button] ClearAllStates';\n  constructor() {}\n}\n\nexport class GetStatusTexts {\n  static readonly type = '[Content State] GetStatusTexts';\n  constructor() {}\n}\n\nexport class HandleAuditStatusResponse {\n  static readonly type = '[Status Texts State] HandleAuditStatusResponse';\n  constructor(public response: AuditStatusText[], public lang: LanguageCode) {}\n}\nexport class SwitchStatusTexts {\n  static readonly type = '[Status Texts State] SwitchStatusTexts';\n  constructor() {}\n}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { Store } from '@ngxs/store';\nimport { LanguageCode } from 'src/app/enums/language';\nimport {\n  SetLanguageCode,\n  SetParticipantData,\n} from '../store/actions/participant.actions';\nimport { ParticipantStateModel } from '../store/state/participant.state';\n\n@Injectable({ providedIn: 'root' })\nexport class StorageService {\n  constructor(private storage: Storage, private store: Store) {}\n\n  async initStorage() {\n    this.storage.create();\n  }\n\n  async getStorageData(): Promise<Partial<ParticipantStateModel>> {\n    const promises = [\n      this.storage.get('lang'),\n      this.storage.get('participantId'),\n      this.storage.get('sssoId'),\n    ];\n    const [languageCode, participantId, sssoId] = await Promise.all(promises);\n    return {\n      languageCode,\n      participantId,\n      sssoId,\n    };\n  }\n\n  async initializeStoreData() {\n    await this.storage.create();\n    const { languageCode, participantId, sssoId } = await this.getStorageData();\n    const participantAction = new SetParticipantData({ participantId, sssoId });\n    const languageAction = new SetLanguageCode(languageCode || LanguageCode.EN);\n\n    if (participantId && sssoId) {\n      this.store.dispatch(participantAction);\n    }\n    // INITIALIZES HELP/STATUSTEXT/MENU SO LESS CALLS HAPPEN\n    this.store.dispatch(languageAction);\n  }\n\n  async hasValidAccessToken(): Promise<boolean> {\n    const promises = [\n      this.storage.get('sssoId'),\n      this.storage.get('participantId'),\n    ];\n    const [ssoId, participantId] = await Promise.all(promises);\n    return ssoId && participantId;\n  }\n\n  setStorageData({\n    participantId,\n    sssoId,\n  }: Partial<ParticipantStateModel>): void {\n    this.storage.set('participantId', participantId);\n    this.storage.set('sssoId', sssoId);\n  }\n\n  async setLanguageCode(lang: LanguageCode): Promise<void> {\n    this.storage.set('lang', lang);\n  }\n\n  async getLanguageCode(): Promise<LanguageCode> {\n    return this.storage.get('lang');\n  }\n\n  async getParticipantId() {\n    return this.storage.get('participantId');\n  }\n\n  clearStorage() {\n    this.storage.clear();\n  }\n}\n","import { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { ApiStatus, updateApiStatus } from 'src/app/interfaces/api-status';\nimport {\n  AuditGroup,\n  AuditGroupRaw,\n  StudentAudit,\n  StudentAuditRaw,\n  EmptyAudit\n} from 'src/app/models/student-audit';\nimport { environment } from 'src/environments/environment';\nimport { SwitchContentView, SwitchHelp, SwitchMenu } from '../actions/content.actions';\nimport { ClearDataUploadState } from '../actions/data-upload.actions';\nimport { ClearAllStates } from '../actions/global.actions';\nimport { SwitchStatusTexts } from '../actions/status-texts.actions';\nimport {\n  GetStudentAudits,\n  HandleAuditsResponse,\n  SetSelectedStudentAuditId,\n  SetShowAuditContent,\n  SwitchAuditView,\n} from '../actions/student-audits.actions';\nimport { normalizeAuditGroup } from './normalizers/student-audit.normalizer';\nimport { ParticipantState } from './participant.state';\nimport { StudentAdmissionsState } from './student-admissions.state';\n\nexport interface StudentAuditsStateModel extends ApiStatus {\n  auditGroups: AuditGroup[];\n  auditGroupsRaw: AuditGroupRaw[];\n  selectedAuditId: string;\n  showAuditContent: boolean;\n}\n\nconst defaultState: StudentAuditsStateModel = {\n  auditGroups: [],\n  auditGroupsRaw: [],\n  hasApiError: false,\n  hasConnectionError: false,\n  isFetching: false,\n  isInitialised: false,\n  selectedAuditId: '',\n  showAuditContent: false,\n};\n\n@State<StudentAuditsStateModel>({\n  name: 'studentAudits',\n  defaults: { ...defaultState },\n})\n@Injectable()\nexport class StudentAuditsState {\n  private headers: HttpHeaders = new HttpHeaders({\n    apiKey: environment.apiKey\n  })\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private store: Store,\n    private zone: NgZone, \n    private location: Location\n  ) {}\n\n  @Selector()\n  static apiStatus({\n    isFetching,\n    isInitialised,\n    hasApiError,\n    hasConnectionError,\n  }: StudentAuditsStateModel): ApiStatus {\n    return {\n      isFetching,\n      isInitialised,\n      hasApiError,\n      hasConnectionError,\n    };\n  }\n\n  @Selector()\n  static auditGroups({ auditGroups }: StudentAuditsStateModel): AuditGroup[] {\n    return auditGroups;\n  }\n\n  @Selector()\n  static showAuditContent({\n    showAuditContent,\n  }: StudentAuditsStateModel): boolean {\n    return showAuditContent;\n  }\n\n  @Selector()\n  static selectedAudit({\n    auditGroups,\n    selectedAuditId,\n  }: StudentAuditsStateModel): StudentAudit {\n    const [studentAudit] = auditGroups\n      .flatMap<StudentAudit>(({ studentAudits }) => studentAudits)\n      .filter(({ id }) => id === selectedAuditId);\n    return studentAudit;\n  }\n\n  @Action(GetStudentAudits)\n  async getStudentAudits(\n    ctx: StateContext<StudentAuditsStateModel>\n  ): Promise<void> {\n    ctx.patchState({ ...updateApiStatus({ isFetching: true }) });\n    this.http.get<AuditGroupRaw[]>(this.constructUrl(),{headers:this.headers}).subscribe({\n      next: (data) => {\n        ctx.dispatch(new HandleAuditsResponse(data));\n      },\n      error: (e: any) => {\n        console.warn(e.error.Message);\n        this.zone.run(() => {\n          this.router.navigate(['/', 'logout']);\n        });\n      },\n    });\n  }\n\n  @Action(HandleAuditsResponse)\n  handleAuditsResponse(\n    ctx: StateContext<StudentAuditsStateModel>,\n    { data }: HandleAuditsResponse\n  ): void {\n    \n    const { selectedNodeId, selectedGuid } = this.store.selectSnapshot(StudentAdmissionsState);\n    const audits: StudentAuditRaw[] = [].concat(...data.map(auditGroup => auditGroup?.StudentAudits));\n    let audit: StudentAuditRaw = selectedNodeId?audits.filter(audit => audit.ID === selectedNodeId)[0]:data[0].StudentAudits[0];\n    if(data[0].Categ === \"empty\"){\n      // Handle no Audit data for admission\n      data[0].StudentAudits = [EmptyAudit];\n      audit = EmptyAudit;\n    }\n    ctx.setState((oldState) => ({\n      ...oldState,\n      selectedAuditId: audit.ID,\n      auditGroupsRaw: data,\n    }));\n    ctx.dispatch(new SwitchContentView());\n    this.location.go('home/'+selectedGuid+'/'+audit.ID);\n  }\n\n  @Action(SetSelectedStudentAuditId)\n  setSelectedStudentAuditId(\n    ctx: StateContext<StudentAuditsStateModel>,\n    { id }: SetSelectedStudentAuditId\n  ): void {\n    ctx.setState(\n      (oldState): StudentAuditsStateModel => ({\n        ...oldState,\n        selectedAuditId: id,\n        showAuditContent: true,\n      })\n    );\n    const { selectedGuid } = this.store.selectSnapshot(StudentAdmissionsState);\n    this.location.go('home/'+selectedGuid+'/'+id);\n  }\n\n  @Action(SetShowAuditContent)\n  setShowAuditContent(\n    ctx: StateContext<StudentAuditsStateModel>,\n    { show }: SetShowAuditContent\n  ): void {\n    ctx.patchState({ showAuditContent: show });\n  }\n\n  @Action(SwitchAuditView)\n  SwitchAuditView(\n    ctx: StateContext<StudentAuditsStateModel>,\n    { taskEnrichments }: SwitchAuditView\n  ): void {\n    const { auditGroupsRaw } = ctx.getState();\n    ctx.setState(\n      (oldState): StudentAuditsStateModel => ({\n        ...oldState,\n        ...updateApiStatus({ isInitialised: true }),\n        showAuditContent: false,\n        auditGroups: auditGroupsRaw.map((group) =>\n          normalizeAuditGroup(group, taskEnrichments)\n        ),\n      })\n    );\n  }\n\n  @Action(ClearAllStates)\n  clearState(ctx: StateContext<StudentAuditsStateModel>): void {\n    ctx.setState({ ...defaultState });\n  }\n\n  private constructUrl() {\n    const { participantId } = this.store.selectSnapshot(ParticipantState);\n    const { selectedGuid } = this.store.selectSnapshot(StudentAdmissionsState);\n    return `${environment.endpoints.root+environment.endpoints.student+'/'+participantId+'/'+environment.endpoints.audits}/${selectedGuid}`;\n  }\n}\n","import { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { ApiStatus, updateApiStatus } from 'src/app/interfaces/api-status';\nimport {\n  StudentAdmission,\n  StudentAdmissionRaw,\n} from 'src/app/models/student-admission';\nimport { environment } from 'src/environments/environment';\nimport { ClearAllStates } from '../actions/global.actions';\nimport {\n  GetStudentAdmissions,\n  HandleAdmissionsResponse,\n  SetSelectedGuid,\n  SetSelectedNodeId,\n} from '../actions/student-admissions.actions';\nimport { normalizeAdmission } from './normalizers/student-admission.normalizer';\nimport { ParticipantState } from './participant.state';\n\nexport interface StudentAdmissionsStateModel extends ApiStatus {\n  selectedGuid: string;\n  selectedNodeId?: string;\n  selectedAdmissionStatus?: string;\n  selectedAdmissionContextColor: string;\n  selectedAdmissionLocked: boolean;\n  studentAdmissionsRaw: StudentAdmissionRaw[];\n}\n\nconst defaultState: StudentAdmissionsStateModel = {\n  hasApiError: false,\n  hasConnectionError: false,\n  isFetching: false,\n  isInitialised: false,\n  selectedGuid: '',\n  selectedNodeId: '',\n  selectedAdmissionLocked: false,\n  selectedAdmissionContextColor: null,\n  studentAdmissionsRaw: [],\n};\n\n@State<StudentAdmissionsStateModel>({\n  name: 'studentAdmissions',\n  defaults: { ...defaultState },\n})\n@Injectable()\nexport class StudentAdmissionsState {\n  private headers: HttpHeaders = new HttpHeaders({\n    apiKey: environment.apiKey\n  })\n  constructor(\n    private store: Store,\n    private http: HttpClient,\n    private router: Router,\n    private location: Location\n  ) {}\n\n  @Selector()\n  static apiStatus({\n    hasApiError,\n    hasConnectionError,\n    isFetching,\n    isInitialised,\n  }: StudentAdmissionsStateModel): ApiStatus {\n    return {\n      hasApiError,\n      hasConnectionError,\n      isFetching,\n      isInitialised,\n    };\n  }\n\n  @Selector()\n  static selectedGuid({ selectedGuid }: StudentAdmissionsStateModel): string {\n    return selectedGuid;\n  }\n\n  @Selector()\n  static selectedNodeId({ selectedNodeId }: StudentAdmissionsStateModel): string {\n    return selectedNodeId;\n  }\n\n  @Selector()\n  static selectedAdmissionStatus({ selectedAdmissionStatus }: StudentAdmissionsStateModel): string {\n    return selectedAdmissionStatus;\n  }\n\n  @Selector()\n  static selectedAdmissionContextColor({ selectedAdmissionContextColor }: StudentAdmissionsStateModel): string {\n    return selectedAdmissionContextColor;\n  }\n  @Selector()\n  static selectedAdmissionLocked({ selectedAdmissionLocked }: StudentAdmissionsStateModel): boolean {\n    return selectedAdmissionLocked;\n  }\n\n  @Selector()\n  static studentAdmissions({\n    studentAdmissionsRaw,\n  }: StudentAdmissionsStateModel): StudentAdmission[] {\n    const normalized = studentAdmissionsRaw.map((s) => normalizeAdmission(s));\n    return normalized;\n  }\n\n  @Action(SetSelectedNodeId)\n  async setSelectedNodeId(\n    ctx: StateContext<StudentAdmissionsStateModel>,\n    { id }\n  ): Promise<void> {\n    ctx.patchState({selectedNodeId:id});\n  }\n  @Action(GetStudentAdmissions)\n  async getStudentAdmissions(\n    ctx: StateContext<StudentAdmissionsStateModel>,\n    { guid },\n    // participantId?: string\n  ): Promise<void> {\n    ctx.patchState({\n      ...updateApiStatus({ isFetching: true }),\n    });\n    this.http.get<StudentAdmissionRaw[]>(this.constructUrl(),{headers:this.headers}).subscribe({\n      next: (data) => ctx.dispatch(new HandleAdmissionsResponse(data, guid)),\n      error: (e: any) => {\n        console.warn(e.message || e);\n        this.router.navigate(['/', 'logout']);\n      },\n    });\n  }\n\n  @Action(HandleAdmissionsResponse)\n  handleAdmissionsResponse(\n    ctx: StateContext<StudentAdmissionsStateModel>,\n    { data, guid }: HandleAdmissionsResponse\n  ): void {\n    const studentAdmission = guid?data.filter(admission => admission.Guid === guid)[0]:data[0];\n    ctx.setState(() => ({\n      ...updateApiStatus({ isInitialised: true }),\n      studentAdmissionsRaw: data,\n      selectedGuid: studentAdmission.Guid,\n      selectedAdmissionStatus: studentAdmission.AdmissionStatusText,\n      selectedAdmissionLocked: studentAdmission.AdmissionLock,\n      selectedAdmissionContextColor: ''+studentAdmission.ContextualColor\n    }));\n    this.location.go('home/'+studentAdmission.Guid);\n  }\n\n  @Action(SetSelectedGuid)\n  setSelectedGuid(\n    ctx: StateContext<StudentAdmissionsStateModel>,\n    action: SetSelectedGuid\n  ): void {\n    ctx.setState((oldState) => ({ ...oldState, selectedGuid: action.guid, selectedAdmissionStatus: action.status, selectedAdmissionLocked: action.locked, selectedAdmissionContextColor: action.contextColor }));\n    this.location.go('home/'+action.guid);\n  }\n\n  @Action(ClearAllStates)\n  clearState(ctx: StateContext<StudentAdmissionsStateModel>): void {\n    ctx.setState({ ...defaultState });\n  }\n\n  constructUrl(): string {\n    const id = this.store.selectSnapshot(ParticipantState.participantId);\n    return `${environment.endpoints.root+environment.endpoints.student}/${id}/${environment.endpoints.admissions}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { CanActivateProtectedRouteGuard } from './guards/can-activate-protected-route.guard';\nimport { CanActivatePublicRouteGuard } from './guards/can-activate-public-route.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'auth',\n        canActivate: [CanActivatePublicRouteGuard],\n        loadChildren: () =>\n          import('./modules/auth/auth.page.module').then(\n            (m) => m.AuthPageModule\n          ),\n      },\n      {\n        path: 'login',\n        canActivate: [CanActivatePublicRouteGuard],\n        loadChildren: () =>\n          import('./modules/login/login.page.module').then(\n            (m) => m.LoginPageModule\n          ),\n      },\n      {\n        path: 'home',\n        canActivate: [CanActivateProtectedRouteGuard],\n        loadChildren: () =>\n          import('./modules/home/home.page.module').then(\n            (m) => m.HomePageModule\n          ),\n      },\n      {\n        path: 'logout',\n        loadChildren: () =>\n          import('./modules/logout/logout.page.module').then(\n            (m) => m.LogoutPageModule\n          ),\n      },\n      {\n        path: '**',\n        redirectTo: 'login',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export interface Message {\n    id: string;\n    subject: string;\n    content: string;\n    read?: boolean;\n    status: MessageStatus | string;\n    node_id?: string;\n    admission_id: string;\n    studyYear: string;\n    academicPeriod: string;\n    send_dt: string;\n}\n\nexport enum MessageStatus {\n  UNREAD_NORMAL_PRIO = \"1\",\n  READ_NORMAL_PRIO = \"2\",\n  UNREAD_HIGH_PRIO = \"3\",\n  READ_HIGH_PRIO = \"4\"\n}\n\nexport interface MessageRaw {\n    MessageBoxType: string;\n    MessageId: string;\n    DateTimeCreated: string;\n    StudentId: string;\n    AdmissionGuid: string;\n    NodeId: string;\n    StudyYear: string;\n    AcademicPeriod: string;\n    Status: MessageStatus | string;\n    StatusText: string;\n    DateTimeStatusChanged: string;\n    Subject: string;\n    Body: string;\n      \n}","export default \".native-app-navigation {\\n  border: none;\\n  height: 58px;\\n}\\n.native-app-navigation ion-badge {\\n  font-size: 0.75rem;\\n}\\n.native-app-navigation ion-badge.notification-count {\\n  background: var(--ion-color-danger);\\n  width: var(--mu-spacing-md);\\n  height: var(--mu-spacing-md);\\n  margin-left: calc(-1 * var(--mu-spacing-md));\\n  margin-top: calc(-1 * var(--mu-spacing-xxs));\\n}\\n.native-app-navigation fa-icon,\\n.native-app-navigation ion-label {\\n  color: var(--ion-color-secondary);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLFlBQUE7QUFDRjtBQUFFO0VBQ0Usa0JBQUE7QUFFSjtBQURJO0VBQ0UsbUNBQUE7RUFDQSwyQkFBQTtFQUNBLDRCQUFBO0VBQ0EsNENBQUE7RUFDQSw0Q0FBQTtBQUdOO0FBQ0U7O0VBRUUsaUNBQUE7QUFDSiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF0aXZlLWFwcC1uYXZpZ2F0aW9uIHtcbiAgYm9yZGVyOiBub25lO1xuICBoZWlnaHQ6IDU4cHg7XG4gIGlvbi1iYWRnZSB7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgICYubm90aWZpY2F0aW9uLWNvdW50IHtcbiAgICAgIGJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgICAgd2lkdGg6IHZhcigtLW11LXNwYWNpbmctbWQpO1xuICAgICAgaGVpZ2h0OiB2YXIoLS1tdS1zcGFjaW5nLW1kKTtcbiAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKC0xICogdmFyKC0tbXUtc3BhY2luZy1tZCkpO1xuICAgICAgbWFyZ2luLXRvcDogY2FsYygtMSAqIHZhcigtLW11LXNwYWNpbmcteHhzKSk7XG4gICAgfVxuICB9XG5cbiAgZmEtaWNvbixcbiAgaW9uLWxhYmVsIHtcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XG4gIH1cbn1cbiJdfQ== */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export enum LanguageCode {\n  NL = 'nl',\n  EN = 'en',\n}\n\nexport enum Language {\n  NL = 'Nederlands',\n  EN = 'English',\n}\n"],"sourceRoot":"webpack:///"}